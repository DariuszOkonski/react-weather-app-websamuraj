{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","onSubmit","submit","type","value","placeholder","onChange","change","Result","weather","date","city","sunrise","sunset","temp","pressure","wind","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","APIkey","App","state","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","length","alert","fetch","then","response","ok","json","Error","data","console","log","time","toLocaleString","prevState","sys","main","speed","catch","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAiBeA,G,MAfF,SAACC,GACZ,OACE,0BAAMC,SAAUD,EAAME,QACpB,2BACEC,KAAK,OACLC,MAAOJ,EAAMI,MACbC,YAAY,eACZC,SAAUN,EAAMO,SAGlB,gDCqBSC,EA/BA,SAACR,GAAW,IAAD,EAC2CA,EAAMS,QAAjEC,EADgB,EAChBA,KAAMC,EADU,EACVA,KAAMC,EADI,EACJA,QAASC,EADL,EACKA,OAAQC,EADb,EACaA,KAAMC,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,KAAMC,EADnC,EACmCA,IAEvDC,EAAU,KAEd,IAAKD,GAAON,EAAM,CAChB,IAAMQ,EAAc,IAAIC,KAAe,IAAVR,GAAgBS,qBACvCC,EAAa,IAAIF,KAAc,IAATP,GAAeQ,qBAE3CH,EACE,6BACE,sDAA2B,gCAASP,IACpC,sDAA2B,gCAASD,IACpC,oDAAyB,gCAASI,EAAT,WACzB,0DAAkB,gCAASK,IAC3B,0DAAkB,gCAASG,IAC3B,yDAAyB,gCAASN,EAAT,SACzB,uDAAuB,gCAASD,EAAT,eAI3BG,EAAU,KAGZ,OACE,yBAAKK,UAAU,UACZN,EAAG,4BAAwBN,GAASO,ICvBrCM,EAAM,yCAsFGC,E,2MAnFbC,MAAQ,CACNtB,MAAO,GACPM,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,KAAK,G,EAGPU,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZzB,MAAOwB,EAAEE,OAAO1B,S,EAIpB2B,iBAAmB,SAACH,GAGlB,GAFAA,EAAEI,iBAE8B,IAA5B,EAAKN,MAAMtB,MAAM6B,OAMnB,OALA,EAAKJ,SAAS,CACZlB,KAAM,GACNM,KAAK,SAEPiB,MAAM,qBAKRC,MAAM,oDAAD,OAAqD,EAAKT,MAAMtB,MAAhE,YAAyEoB,EAAzE,kBACFY,KAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAMC,MAAM,kBAAoB,EAAKd,MAAMtB,SAE5CgC,KAAK,SAAAK,GACJC,QAAQC,IAAIF,GACZ,IAAMG,GAAO,IAAIxB,MAAOyB,iBAExB,EAAKhB,SAAS,SAAAiB,GAAS,MAAK,CAC1B7B,KAAK,EACLP,KAAMkC,EACNjC,KAAMmC,EAAU1C,MAChBQ,QAAS6B,EAAKM,IAAInC,QAClBC,OAAQ4B,EAAKM,IAAIlC,OACjBC,KAAM2B,EAAKO,KAAKlC,KAChBC,SAAU0B,EAAKO,KAAKjC,SACpBC,KAAMyB,EAAKzB,KAAKiC,WAGnBC,MAAM,SAAAjC,GACLyB,QAAQC,IAAI1B,GACZ,EAAKY,SAAS,SAAAiB,GAAS,MAAK,CAC1B7B,KAAK,EACLN,KAAMmC,EAAU1C,MAChBM,KAAM,GACNE,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,S,wEAMZ,OACE,yBAAKO,UAAU,OACb,kBAAC,EAAD,CACEnB,MAAO+C,KAAKzB,MAAMtB,MAClBG,OAAQ4C,KAAKxB,kBACbzB,OAAQiD,KAAKpB,mBAGf,kBAAC,EAAD,CAAQtB,QAAS0C,KAAKzB,a,GA9EZ0B,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.5c5898e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form onSubmit={props.submit}>\r\n      <input\r\n        type=\"text\"\r\n        value={props.value}\r\n        placeholder=\"Type city...\"\r\n        onChange={props.change}\r\n      />\r\n\r\n      <button>Find city</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n  const { date, city, sunrise, sunset, temp, pressure, wind, err } = props.weather;\r\n\r\n  let content = null;\r\n\r\n  if (!err && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n    content = (\r\n      <div>\r\n        <p>Wyniki wyszukiwania dla <strong>{city}</strong></p>\r\n        <p>Dane dla dnia i godziny <strong>{date}</strong></p>\r\n        <p>Aktualna temperatura: <strong>{temp} &#176;C</strong></p>\r\n        <p>Wschód słońca: <strong>{sunriseTime}</strong></p>\r\n        <p>Zachód słońca: <strong>{sunsetTime}</strong></p>\r\n        <p>Aktualna siła wiatru: <strong>{wind} m/s</strong></p>\r\n        <p>Aktualne ciśnienie: <strong>{pressure} hPa</strong></p>\r\n      </div>\r\n    );\r\n  } else {\r\n    content = null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      {err ? `Nie mamy w bazie: ${city}` : content}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;","import React from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Result from './Result';\n\nconst APIkey = `APPID=a9302906cfdb7f28449954dd9590d745`;\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    err: false,\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  }\n\n  handleCitySubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.value.length === 0) {\n      this.setState({\n        city: '',\n        err: true,\n      })\n      alert('Type some city...');\n      return;\n    }\n\n\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&${APIkey}&units=metric`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw Error('No city match: ' + this.state.value)\n      })\n      .then(data => {\n        console.log(data);\n        const time = new Date().toLocaleString()\n\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: prevState.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n        }));\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value,\n          date: '',\n          sunrise: '',\n          sunset: '',\n          temp: '',\n          pressure: '',\n          wind: '',\n        }));\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleCitySubmit}\n        />\n\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// a9302906cfdb7f28449954dd9590d745\n// http://api.openweathermap.org/data/2.5/weather?q=London&APPID=a9302906cfdb7f28449954dd9590d745&units=metric\n// http://api.openweathermap.org/data/2.5/weather?q=Katowice&APPID=a9302906cfdb7f28449954dd9590d745&units=metric","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}